name: Release

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: "Type of release (major, minor, patch, alpha)"
        required: true
        default: alpha
        type: choice
        options:
          - major
          - minor
          - patch
          - alpha

jobs:
  validate:
    runs-on: ubuntu-latest
    name: Validate
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Run Biome
        run: pnpm style

      - name: Build packages
        run: pnpm build
        env:
          SERVER: https://api.paradym.id/openapi.json

  release:
    runs-on: ubuntu-latest
    name: Release
    needs: [validate]
    # Only run on workflow dispatch to main branch
    if: github.ref == 'refs/heads/main' && github.repository == 'animo/paradym-sdk-ts' && github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: git config
        run: |
          git config user.name "@Animo-bot"
          git config user.email "development@animo.id"

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Set NPM config
        run: |
          echo "//registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN }}" >> .npmrc
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "always-auth=true" >> .npmrc
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build the library
        run: pnpm build

      - name: Publish
        id: publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ ${{ inputs.release-type }} == 'alpha' ]; then
            pnpm release prerelease --yes
          else
            pnpm release ${{ inputs.release-type }} --force-publish --no-private --yes
          fi
